{"version":3,"sources":["components/shared-components/Flex/index.js","configs/EnvironmentConfig.js","configs/AppConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","components/shared-components/Loading/index.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","email","password","signInWithEmailAndPassword","then","user","catch","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","signOutUser","undefined","removeItem","signOutSuccess","signUpWithFBEmail","signUpSuccess","error","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","Component","render","this","React","createElement","navigationConfig","key","path","title","icon","breadcrumb","submenu","DashboardOutlined","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","UsergroupAddOutlined","MailOutlined","SettingOutlined","MobileOutlined","FileTextOutlined","Utils","getNameInitial","name","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","route","p","hasOwnProperty","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","color","percent","R","G","B","RR","toString","length","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","toLowerCase","filterArray","list","value","data","filter","item","deleteArrayRow","wildCardSearch","input","searchText","getBreakPoint","screens","breakpoints","push","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","setVisible","useState","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","isCollapse","switcher","themes","useThemeSwitcher","Group","size","onNavTypeClick","target","Button","checked","isChecked","changedTheme","text","configState","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","location","pathSnippets","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","Loading","cover","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","status","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading","fontSize","spin","align","indicator"],"mappings":"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","file":"static/js/main.44451809.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined,\r\n  ShoppingCartOutlined,\r\n  ShoppingOutlined,\r\n  UserOutlined,\r\n  PictureOutlined,\r\n  GiftOutlined,\r\n  ShopOutlined,\r\n  UsergroupAddOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n  MobileOutlined,\r\n  FileTextOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nconst mainNavTree = [\r\n  {\r\n    key: \"main\",\r\n    path: `${APP_PREFIX_PATH}/main`,\r\n    // title: \"Сatalog\",\r\n    title: \"Основные\",\r\n    icon: \"\",\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: \"dashboard\",\r\n        path: `${APP_PREFIX_PATH}/main/dashboard`,\r\n        // title: \"Dashboard\",\r\n        title: \"Дашбоард\",\r\n        icon: DashboardOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n\r\n      {\r\n        key: \"catalog\",\r\n        path: `${APP_PREFIX_PATH}/main/catalog`,\r\n        // title: \"Сatalog\",\r\n        title: \"Каталог\",\r\n        icon: ShoppingCartOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: \"catalog-products\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/products`,\r\n            // title: \"Products\",\r\n            title: \"Товары\",\r\n            icon: \"\",\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"catalog-categories\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/categories`,\r\n            // title: \"Categories\",\r\n            title: \"Категории\",\r\n            icon: \"\",\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"catalog-collections\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/collections`,\r\n            // title: \"Collections\",\r\n            title: \"Коллекции\",\r\n            icon: \"\",\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"catalog-combo\",\r\n            path: `${APP_PREFIX_PATH}/main/catalog/combo`,\r\n            // title: \"Combo\",\r\n            title: \"Комбо\",\r\n            icon: \"\",\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: \"orders\",\r\n        path: `${APP_PREFIX_PATH}/main/orders`,\r\n        // title: \"Orders\",\r\n        title: \"Заказы\",\r\n        icon: ShoppingOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n\r\n      {\r\n        key: \"clients\",\r\n        path: `${APP_PREFIX_PATH}/main/clients`,\r\n        // title: \"Orders\",\r\n        title: \"Клиенты\",\r\n        icon: UserOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: \"clients-list\",\r\n            path: `${APP_PREFIX_PATH}/main/clients/list`,\r\n            // title: \"Clients list\",\r\n            title: \"Список клиентов\",\r\n            icon: \"\",\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"clients-groups\",\r\n            path: `${APP_PREFIX_PATH}/main/clients/groups`,\r\n            // title: \"Clients groups\",\r\n            title: \"Группы клиентов\",\r\n            icon: \"\",\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: \"banners\",\r\n        path: `${APP_PREFIX_PATH}/main/banners`,\r\n        // title: \"Banners\",\r\n        title: \"Баннеры\",\r\n        icon: PictureOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n\r\n      {\r\n        key: \"promo\",\r\n        path: `${APP_PREFIX_PATH}/main/promo`,\r\n        // title: \"Promo\",\r\n        title: \"Промокоды\",\r\n        icon: GiftOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n\r\n      {\r\n        key: \"offline\",\r\n        path: `${APP_PREFIX_PATH}/main/offline`,\r\n        // title: \"offline\",\r\n        title: \"Оффлайн точки\",\r\n        icon: ShopOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: \"offline-addresses\",\r\n            path: `${APP_PREFIX_PATH}/main/offline/addresses`,\r\n            // title: \"Addresses\",\r\n            title: \"Адреса\",\r\n            icon: \"\",\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: \"offline-geofences\",\r\n            path: `${APP_PREFIX_PATH}/main/offline/geofences`,\r\n            // title: \"Geofences\",\r\n            title: \"Геозоны\",\r\n            icon: \"\",\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        key: \"employees\",\r\n        path: `${APP_PREFIX_PATH}/main/employees`,\r\n        // title: \"Employees\",\r\n        title: \"Сотрудники\",\r\n        icon: UsergroupAddOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n\r\n      {\r\n        key: \"mailings\",\r\n        path: `${APP_PREFIX_PATH}/main/mailings`,\r\n        // title: \"Mailings\",\r\n        title: \"Рассылки\",\r\n        icon: MailOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst systemNavTree = [\r\n  {\r\n    key: \"system\",\r\n    path: `${APP_PREFIX_PATH}/system`,\r\n    // title: \"System\",\r\n    title: \"Системные\",\r\n    icon: \"\",\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: \"settings\",\r\n        path: `${APP_PREFIX_PATH}/system/settings`,\r\n        // title: \"Settings\",\r\n        title: \"Настройки\",\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"mobile\",\r\n        path: `${APP_PREFIX_PATH}/system/mobile`,\r\n        // title: \"Mobile app\",\r\n        title: \"Мобильное приложение\",\r\n        icon: MobileOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"logs\",\r\n        path: `${APP_PREFIX_PATH}/system/logs`,\r\n        // title: \"Logs\",\r\n        title: \"Логи\",\r\n        icon: FileTextOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...mainNavTree, ...systemNavTree];\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/main`} component={lazy(() => import(`./main`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading"],"sourceRoot":""}